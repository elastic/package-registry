# Version of the package format. Currently always 1.0.0
format_version: 1.0.0

# Name of the package. Required.
name: reference

# Title of the package. This is shown in the UI. Required.
title: Reference package

# Description of the package. Required.
description: >
  This package is used for defining all the properties of a package, the possible assets etc.
  It serves as a reference on all the config options which are possible.

# Version of the package. This is required and must be a valid semver version.
version: 1.0.0

# Categories this package fits in. The current two categories are "logs" and "metrics"
categories: ["custom", "web"]

# Release of this package. The possible options are experimental, beta, ga. The default if not set is experimental.
release: ga

# License of the package. Default is Elastic. This relates to the Elastic Basic license.
license: basic

# The package type. The options for now are [integration, solution], more type might be added in the future.
# The default type is integration and will be set if empty.
type: integration

# Details about the owner of the package. Current only github link is supported.
# A package can only have a single owner, the owner can be a user or a team.
owner:
  type: elastic
  github: "ruflin"

conditions:
  kibana.version: ">6.7.0  <7.6.0"

compatibility: [1.0.2, 2.0.1]
os.platform: [darwin, freebsd, linux, macos, openbsd, windows]

# Screenshot options are commented out as currently not screenshots added
screenshots:
#  - src: /img/kibana-iptables.png
#    title: IP Tables Overview dashboard
#    size: 1492x1382
#  - src: /img/kibana-iptables-ubiquiti.png
#    title: IP Tables Ubiquity Dashboard
#    size: 1492x1464
#  # The src path is relative from inside the package. The full path will be generated by the server
#  # and exposed through the API.
#  - src: /img/overview-logs.png
#    title: This shows the overview of the logs dashboard.
#    # The type does not have to be set explicitly if it's in the file extesions
#    # but the server will extract it an expose it through the API
#    type: image/png
#    # The size of the image could be detect by the server too if needed.
#    # We must come up with a recommended image size.
#    size: 800x600
#  - src: /img/overview-metrics.jpg
#    title: Metrics Dashboard.
#    size: 800x600
#  - src: getting-started.mp4
#    title: Getting started with the envoyproxy integration.
#    size: 800x600
#    type: video/mp4

# Icons options are commented out as currently not icons added
# It is expected that icons are in svg, but other formats are supported.
icons:
  - # src is a required field
    src: "/img/icon.svg"
    # This helps to send the right header
    type: "image/svg+xml"
    # Size of the image, can be useful if it has to be scaled.
    size: 32x32

# Defining a datasource allows the UI to generate a form for each input and generate the agent
# config out of it. For a visual guide on what fields is used how in the UI, check out https://github.com/elastic/package-registry/pull/242
policy_templates:
  - # Do we need a name for the data source?
    name: nginx
    title: Nginx logs and metrics.
    description: Collecting logs and metrics from nginx.

    # List of inputs this datasource supports
    inputs:
      - # An id can be given, in case the type used here is not unique
        # This is for selection in the stream
        # id: nginx

        # The type describing this input. These are the types supported by the agent
        # and are used by the stream definition to reference a type.
        type: nginx/metrics

        # Short title to describe the input. It should not have a dot at the end.
        title: Collect metrics and logs from reference service

        # This description is to describe what this input is about. It can contain markdown
        # and should always end with a dot.
        description: Description of the reference input.

        # Common configuration options for this input
        vars:
          - name: hosts
            title: Hosts

            description: List of nginx hosts to collect data from.
            default: ["http://127.0.0.1"]
            # All the config options that are required should be shown in the UI
            required: true
            multi: true
            type: text
