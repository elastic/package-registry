[
  {
    "name": "aws",
    "title": "AWS",
    "version": "1.16.4",
    "release": "ga",
    "description": "Collect logs and metrics from Amazon Web Services with Elastic Agent.",
    "type": "integration",
    "download": "/epr/aws/aws-1.16.4.zip",
    "path": "/package/aws/1.16.4",
    "icons": [
      {
        "src": "/img/logo_aws.svg",
        "path": "/package/aws/1.16.4/img/logo_aws.svg",
        "title": "logo aws",
        "size": "32x32",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "dynamodb",
        "title": "Amazon DynamoDB",
        "description": "Collect Amazon DynamoDB metrics with Elastic Agent",
        "icons": [
          {
            "src": "/img/logo_dynamodb.svg",
            "path": "/package/aws/1.16.4/img/logo_dynamodb.svg",
            "title": "AWS DynamoDB logo",
            "size": "32x32",
            "type": "image/svg+xml"
          }
        ],
        "categories": [
          "datastore"
        ]
      },
      {
        "name": "ebs",
        "title": "Amazon EBS",
        "description": "Collect Amazon Elastic Block Storage metrics with Elastic Agent",
        "icons": [
          {
            "src": "/img/logo_ebs.svg",
            "path": "/package/aws/1.16.4/img/logo_ebs.svg",
            "title": "AWS EBS logo",
            "size": "32x32",
            "type": "image/svg+xml"
          }
        ],
        "categories": [
          "datastore"
        ]
      },
      {
        "name": "rds",
        "title": "Amazon RDS",
        "description": "Collect Amazon Relational Database Service metrics with Elastic Agent",
        "icons": [
          {
            "src": "/img/logo_rds.svg",
            "path": "/package/aws/1.16.4/img/logo_rds.svg",
            "title": "AWS RDS logo",
            "size": "32x32",
            "type": "image/svg+xml"
          }
        ],
        "categories": [
          "datastore"
        ]
      },
      {
        "name": "s3",
        "title": "Amazon S3",
        "description": "Monitor Amazon S3 buckets by collecting access logs, storage & request metrics with Elastic Agent",
        "icons": [
          {
            "src": "/img/logo_s3.svg",
            "path": "/package/aws/1.16.4/img/logo_s3.svg",
            "title": "AWS S3 logo",
            "size": "32x32",
            "type": "image/svg+xml"
          }
        ],
        "categories": [
          "datastore",
          "security"
        ]
      },
      {
        "name": "s3_storage_lens",
        "title": "Amazon S3 Storage Lens",
        "description": "Collect Amazon S3 Storage Lens metrics with Elastic Agent",
        "icons": [
          {
            "src": "/img/logo_s3_storage_lens.svg",
            "path": "/package/aws/1.16.4/img/logo_s3_storage_lens.svg",
            "title": "AWS S3 storage lens logo",
            "size": "32x32",
            "type": "image/svg+xml"
          }
        ],
        "categories": [
          "datastore"
        ]
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.15.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/obs-cloud-monitoring"
    },
    "categories": [
      "aws",
      "cloud"
    ],
    "signature_path": "/epr/aws/aws-1.16.4.zip.sig",
    "data_streams": [
      {
        "type": "metrics",
        "dataset": "aws.billing",
        "title": "AWS Billing Metrics"
      },
      {
        "type": "logs",
        "dataset": "aws.cloudfront_logs",
        "title": "AWS CloudFront logs"
      },
      {
        "type": "logs",
        "dataset": "aws.cloudtrail",
        "title": "AWS CloudTrail Logs"
      },
      {
        "type": "logs",
        "dataset": "aws.cloudwatch_logs",
        "title": "AWS CloudWatch logs"
      },
      {
        "type": "metrics",
        "dataset": "aws.cloudwatch_metrics",
        "title": "AWS CloudWatch metrics"
      },
      {
        "type": "metrics",
        "dataset": "aws.dynamodb",
        "title": "AWS DynamoDB metrics"
      },
      {
        "type": "metrics",
        "dataset": "aws.ebs",
        "title": "AWS EBS metrics"
      },
      {
        "type": "logs",
        "dataset": "aws.ec2_logs",
        "title": "AWS EC2 logs"
      },
      {
        "type": "metrics",
        "dataset": "aws.ec2_metrics",
        "title": "AWS EC2 metrics"
      },
      {
        "type": "logs",
        "dataset": "aws.elb_logs",
        "title": "AWS ELB logs"
      },
      {
        "type": "metrics",
        "dataset": "aws.elb_metrics",
        "title": "AWS ELB metrics"
      },
      {
        "type": "logs",
        "dataset": "aws.firewall_logs",
        "title": "AWS Network Firewall logs"
      },
      {
        "type": "metrics",
        "dataset": "aws.firewall_metrics",
        "title": "AWS Network Firewall metrics"
      },
      {
        "type": "metrics",
        "dataset": "aws.lambda",
        "title": "AWS Lambda metrics"
      },
      {
        "type": "metrics",
        "dataset": "aws.natgateway",
        "title": "AWS NAT gateway metrics"
      },
      {
        "type": "metrics",
        "dataset": "aws.rds",
        "title": "AWS RDS metrics"
      },
      {
        "type": "logs",
        "dataset": "aws.route53_public_logs",
        "title": "AWS Route 53 Public Zone Logs"
      },
      {
        "type": "logs",
        "dataset": "aws.route53_resolver_logs",
        "title": "AWS Route 53 Resolver Query Logs"
      },
      {
        "type": "metrics",
        "dataset": "aws.s3_daily_storage",
        "title": "AWS S3 daily storage metrics"
      },
      {
        "type": "metrics",
        "dataset": "aws.s3_request",
        "title": "AWS S3 request metrics"
      },
      {
        "type": "metrics",
        "dataset": "aws.s3_storage_lens",
        "title": "AWS S3 Storage Lens metrics"
      },
      {
        "type": "logs",
        "dataset": "aws.s3access",
        "title": "AWS s3access logs"
      },
      {
        "type": "metrics",
        "dataset": "aws.sns",
        "title": "AWS SNS metrics"
      },
      {
        "type": "metrics",
        "dataset": "aws.sqs",
        "title": "AWS SQS metrics"
      },
      {
        "type": "metrics",
        "dataset": "aws.transitgateway",
        "title": "AWS Transit Gateway metrics"
      },
      {
        "type": "metrics",
        "dataset": "aws.usage",
        "title": "AWS usage metrics"
      },
      {
        "type": "logs",
        "dataset": "aws.vpcflow",
        "title": "AWS vpcflow logs"
      },
      {
        "type": "metrics",
        "dataset": "aws.vpn",
        "title": "AWS VPN metrics"
      },
      {
        "type": "logs",
        "dataset": "aws.waf",
        "title": "AWS WAF logs"
      }
    ]
  },
  {
    "name": "cassandra",
    "title": "Cassandra",
    "version": "1.1.0",
    "release": "ga",
    "description": "This Elastic integration collects logs and metrics from cassandra.",
    "type": "integration",
    "download": "/epr/cassandra/cassandra-1.1.0.zip",
    "path": "/package/cassandra/1.1.0",
    "icons": [
      {
        "src": "/img/cassandra.svg",
        "path": "/package/cassandra/1.1.0/img/cassandra.svg",
        "title": "cassandra",
        "size": "279x187",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "cassandra",
        "title": "Cassandra logs and metrics",
        "description": "Collect logs and metrics from Cassandra"
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.15.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/integrations"
    },
    "categories": [
      "datastore",
      "monitoring"
    ],
    "signature_path": "/epr/cassandra/cassandra-1.1.0.zip.sig",
    "data_streams": [
      {
        "type": "logs",
        "dataset": "cassandra.log",
        "title": "Cassandra System Logs"
      },
      {
        "type": "metrics",
        "dataset": "cassandra.metrics",
        "title": "metrics"
      }
    ]
  },
  {
    "name": "cockroachdb",
    "title": "CockroachDB Metrics",
    "version": "0.2.0",
    "release": "beta",
    "description": "Collect metrics from CockroachDB servers with Elastic Agent.",
    "type": "integration",
    "download": "/epr/cockroachdb/cockroachdb-0.2.0.zip",
    "path": "/package/cockroachdb/0.2.0",
    "icons": [
      {
        "src": "/img/cockroachdb.png",
        "path": "/package/cockroachdb/0.2.0/img/cockroachdb.png",
        "title": "logo docker",
        "size": "32x32",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "status",
        "title": "CockroachDB",
        "description": "CockroachDB metrics Integration",
        "icons": [
          {
            "src": "/img/cockroachdb.png",
            "path": "/package/cockroachdb/0.2.0/img/cockroachdb.png",
            "title": "logo cockroachdb",
            "size": "32x32",
            "type": "image/svg+xml"
          }
        ]
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.14.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/integrations"
    },
    "categories": [
      "datastore"
    ],
    "signature_path": "/epr/cockroachdb/cockroachdb-0.2.0.zip.sig",
    "data_streams": [
      {
        "type": "metrics",
        "dataset": "cockroachdb.status",
        "title": "Status"
      }
    ]
  },
  {
    "name": "elasticsearch",
    "title": "Elasticsearch",
    "version": "0.2.0",
    "release": "experimental",
    "description": "Elasticsearch Integration",
    "type": "integration",
    "download": "/epr/elasticsearch/elasticsearch-0.2.0.zip",
    "path": "/package/elasticsearch/0.2.0",
    "icons": [
      {
        "src": "/img/logo_elasticsearch.svg",
        "path": "/package/elasticsearch/0.2.0/img/logo_elasticsearch.svg",
        "title": "logo elasticsearch",
        "size": "32x32",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "elasticsearch",
        "title": "Elasticsearch logs and metrics",
        "description": "Collect logs and metrics from Elasticsearch instances"
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.15.0"
      }
    },
    "owner": {
      "github": "elastic/integrations"
    },
    "categories": [
      "elastic_stack",
      "datastore"
    ],
    "signature_path": "/epr/elasticsearch/elasticsearch-0.2.0.zip.sig",
    "data_streams": [
      {
        "type": "logs",
        "dataset": "elasticsearch.audit",
        "title": "Elasticsearch audit logs"
      },
      {
        "type": "metrics",
        "dataset": "elasticsearch.ccr",
        "title": "Elasticsearch ccr metrics"
      },
      {
        "type": "metrics",
        "dataset": "elasticsearch.cluster_stats",
        "title": "Elasticsearch cluster_stats metrics"
      },
      {
        "type": "logs",
        "dataset": "elasticsearch.deprecation",
        "title": "Elasticsearch deprecation logs"
      },
      {
        "type": "metrics",
        "dataset": "elasticsearch.enrich",
        "title": "Elasticsearch enrich metrics"
      },
      {
        "type": "logs",
        "dataset": "elasticsearch.gc",
        "title": "Elasticsearch gc logs"
      },
      {
        "type": "metrics",
        "dataset": "elasticsearch.index",
        "title": "Elasticsearch index metrics"
      },
      {
        "type": "metrics",
        "dataset": "elasticsearch.index_recovery",
        "title": "Elasticsearch index_recovery metrics"
      },
      {
        "type": "metrics",
        "dataset": "elasticsearch.index_summary",
        "title": "Elasticsearch index_summary metrics"
      },
      {
        "type": "metrics",
        "dataset": "elasticsearch.ml_job",
        "title": "Elasticsearch ml_job metrics"
      },
      {
        "type": "metrics",
        "dataset": "elasticsearch.node",
        "title": "Elasticsearch node metrics"
      },
      {
        "type": "metrics",
        "dataset": "elasticsearch.node_stats",
        "title": "Elasticsearch node_stats metrics"
      },
      {
        "type": "metrics",
        "dataset": "elasticsearch.pending_tasks",
        "title": "Elasticsearch pending_tasks metrics"
      },
      {
        "type": "logs",
        "dataset": "elasticsearch.server",
        "title": "Elasticsearch server logs"
      },
      {
        "type": "metrics",
        "dataset": "elasticsearch.shard",
        "title": "Elasticsearch shard metrics"
      },
      {
        "type": "logs",
        "dataset": "elasticsearch.slowlog",
        "title": "Elasticsearch slowlog logs"
      }
    ]
  },
  {
    "name": "microsoft_sqlserver",
    "title": "Microsoft SQL Server",
    "version": "0.4.5",
    "release": "beta",
    "description": "Collect audit events from Microsoft SQL Server with Elastic Agent.",
    "type": "integration",
    "download": "/epr/microsoft_sqlserver/microsoft_sqlserver-0.4.5.zip",
    "path": "/package/microsoft_sqlserver/0.4.5",
    "icons": [
      {
        "src": "/img/microsoft-sql-server-logo.svg",
        "path": "/package/microsoft_sqlserver/0.4.5/img/microsoft-sql-server-logo.svg",
        "title": "Microsof SQL Server",
        "size": "32x32",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "audit_logs",
        "title": "SQL Server audit logs",
        "description": "Collect audit logs from Windows event logs"
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.16.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/security-external-integrations"
    },
    "categories": [
      "datastore",
      "security"
    ],
    "signature_path": "/epr/microsoft_sqlserver/microsoft_sqlserver-0.4.5.zip.sig",
    "data_streams": [
      {
        "type": "logs",
        "dataset": "microsoft_sqlserver.audit",
        "title": "SQL Server audit events"
      }
    ]
  },
  {
    "name": "mongodb",
    "title": "MongoDB",
    "version": "1.3.1",
    "release": "ga",
    "description": "Collect logs and metrics from MongoDB instances with Elastic Agent.",
    "type": "integration",
    "download": "/epr/mongodb/mongodb-1.3.1.zip",
    "path": "/package/mongodb/1.3.1",
    "icons": [
      {
        "src": "/img/logo_mongodb.svg",
        "path": "/package/mongodb/1.3.1/img/logo_mongodb.svg",
        "title": "logo mongodb",
        "size": "32x32",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "mongodb",
        "title": "MongoDB logs and metrics",
        "description": "Collect logs and metrics from MongoDB instances"
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.14.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/integrations"
    },
    "categories": [
      "datastore"
    ],
    "signature_path": "/epr/mongodb/mongodb-1.3.1.zip.sig",
    "data_streams": [
      {
        "type": "metrics",
        "dataset": "mongodb.collstats",
        "title": "MongoDB collstats metrics"
      },
      {
        "type": "metrics",
        "dataset": "mongodb.dbstats",
        "title": "MongoDB dbstats metrics"
      },
      {
        "type": "logs",
        "dataset": "mongodb.log",
        "title": "mongodb log logs"
      },
      {
        "type": "metrics",
        "dataset": "mongodb.metrics",
        "title": "MongoDB metrics"
      },
      {
        "type": "metrics",
        "dataset": "mongodb.replstatus",
        "title": "MongoDB replstatus metrics"
      },
      {
        "type": "metrics",
        "dataset": "mongodb.status",
        "title": "MongoDB status metrics"
      }
    ]
  },
  {
    "name": "mysql",
    "title": "MySQL",
    "version": "1.2.1",
    "release": "ga",
    "description": "Collect logs and metrics from MySQL servers with Elastic Agent.",
    "type": "integration",
    "download": "/epr/mysql/mysql-1.2.1.zip",
    "path": "/package/mysql/1.2.1",
    "icons": [
      {
        "src": "/img/logo_mysql.svg",
        "path": "/package/mysql/1.2.1/img/logo_mysql.svg",
        "title": "logo mysql",
        "size": "32x32",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "mysql",
        "title": "MySQL logs and metrics",
        "description": "Collect logs and metrics from MySQL instances"
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.14.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/integrations"
    },
    "categories": [
      "datastore"
    ],
    "signature_path": "/epr/mysql/mysql-1.2.1.zip.sig",
    "data_streams": [
      {
        "type": "logs",
        "dataset": "mysql.error",
        "title": "MySQL error logs"
      },
      {
        "type": "metrics",
        "dataset": "mysql.galera_status",
        "title": "MySQL galera_status metrics"
      },
      {
        "type": "metrics",
        "dataset": "mysql.performance",
        "title": "MySQL performance metrics"
      },
      {
        "type": "logs",
        "dataset": "mysql.slowlog",
        "title": "MySQL slowlog logs"
      },
      {
        "type": "metrics",
        "dataset": "mysql.status",
        "title": "MySQL status metrics"
      }
    ]
  },
  {
    "name": "mysql_enterprise",
    "title": "MySQL Enterprise",
    "version": "1.0.1",
    "release": "ga",
    "description": "MySQL Enterprise Audit Log Integration",
    "type": "integration",
    "download": "/epr/mysql_enterprise/mysql_enterprise-1.0.1.zip",
    "path": "/package/mysql_enterprise/1.0.1",
    "icons": [
      {
        "src": "/img/logo_mysql.svg",
        "path": "/package/mysql_enterprise/1.0.1/img/logo_mysql.svg",
        "title": "MySQL",
        "size": "32x32",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "mysql_enterprise",
        "title": "MySQL Enterprise audit logs",
        "description": "Collect MySQL Enterprise audit logs"
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.17.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/security-external-integrations"
    },
    "categories": [
      "security",
      "datastore"
    ],
    "signature_path": "/epr/mysql_enterprise/mysql_enterprise-1.0.1.zip.sig",
    "data_streams": [
      {
        "type": "logs",
        "dataset": "mysql_enterprise.audit",
        "title": "MySQL Enterprise Audit Log"
      }
    ]
  },
  {
    "name": "oracle",
    "title": "Oracle",
    "version": "1.0.1",
    "release": "ga",
    "description": "Oracle Audit Log Integration",
    "type": "integration",
    "download": "/epr/oracle/oracle-1.0.1.zip",
    "path": "/package/oracle/1.0.1",
    "icons": [
      {
        "src": "/img/oracle_logo.svg",
        "path": "/package/oracle/1.0.1/img/oracle_logo.svg",
        "title": "Oracle",
        "size": "32x32",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "oracle",
        "title": "Oracle Audit Logs",
        "description": "Collect Oracle audit logs"
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.17.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/security-external-integrations"
    },
    "categories": [
      "security",
      "datastore"
    ],
    "signature_path": "/epr/oracle/oracle-1.0.1.zip.sig",
    "data_streams": [
      {
        "type": "logs",
        "dataset": "oracle.database_audit",
        "title": "Oracle Audit Log"
      }
    ]
  },
  {
    "name": "postgresql",
    "title": "PostgreSQL",
    "version": "1.2.0",
    "release": "ga",
    "description": "Collect logs and metrics from PostgreSQL servers with Elastic Agent.",
    "type": "integration",
    "download": "/epr/postgresql/postgresql-1.2.0.zip",
    "path": "/package/postgresql/1.2.0",
    "icons": [
      {
        "src": "/img/logo_postgres.svg",
        "path": "/package/postgresql/1.2.0/img/logo_postgres.svg",
        "title": "logo postgres",
        "size": "32x32",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "postgresql",
        "title": "PostgreSQL logs and metrics",
        "description": "Collect logs and metrics from PostgreSQL instances"
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.14.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/integrations"
    },
    "categories": [
      "datastore"
    ],
    "signature_path": "/epr/postgresql/postgresql-1.2.0.zip.sig",
    "data_streams": [
      {
        "type": "metrics",
        "dataset": "postgresql.activity",
        "title": "PostgreSQL activity metrics"
      },
      {
        "type": "metrics",
        "dataset": "postgresql.bgwriter",
        "title": "PostgreSQL bgwriter metrics"
      },
      {
        "type": "metrics",
        "dataset": "postgresql.database",
        "title": "PostgreSQL database metrics"
      },
      {
        "type": "logs",
        "dataset": "postgresql.log",
        "title": "PostgreSQL logs"
      },
      {
        "type": "metrics",
        "dataset": "postgresql.statement",
        "title": "PostgreSQL statement metrics"
      }
    ]
  },
  {
    "name": "prometheus",
    "title": "Prometheus Metrics",
    "version": "0.7.0",
    "release": "experimental",
    "description": "Collect metrics from Prometheus servers with Elastic Agent.",
    "type": "integration",
    "download": "/epr/prometheus/prometheus-0.7.0.zip",
    "path": "/package/prometheus/0.7.0",
    "icons": [
      {
        "src": "/img/logo_prometheus.svg",
        "path": "/package/prometheus/0.7.0/img/logo_prometheus.svg",
        "title": "logo prometheus",
        "size": "32x32",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "prometheus",
        "title": "Prometheus metrics",
        "description": "Collect metrics from Prometheus instances"
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.14.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/integrations"
    },
    "categories": [
      "monitoring",
      "datastore"
    ],
    "signature_path": "/epr/prometheus/prometheus-0.7.0.zip.sig",
    "data_streams": [
      {
        "type": "metrics",
        "dataset": "prometheus.collector",
        "title": "Prometheus collector metrics"
      },
      {
        "type": "metrics",
        "dataset": "prometheus.query",
        "title": "Prometheus query metrics"
      },
      {
        "type": "metrics",
        "dataset": "prometheus.remote_write",
        "title": "Prometheus remote_write metrics"
      }
    ]
  },
  {
    "name": "redis",
    "title": "Redis",
    "version": "1.2.0",
    "release": "ga",
    "description": "Collect logs and metrics from Redis servers with Elastic Agent.",
    "type": "integration",
    "download": "/epr/redis/redis-1.2.0.zip",
    "path": "/package/redis/1.2.0",
    "icons": [
      {
        "src": "/img/logo_redis.svg",
        "path": "/package/redis/1.2.0/img/logo_redis.svg",
        "title": "logo redis",
        "size": "32x32",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "redis",
        "title": "Redis logs and metrics",
        "description": "Collect logs and metrics from Redis instances"
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.14.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/integrations"
    },
    "categories": [
      "datastore",
      "message_queue"
    ],
    "signature_path": "/epr/redis/redis-1.2.0.zip.sig",
    "data_streams": [
      {
        "type": "metrics",
        "dataset": "redis.info",
        "title": "Redis info metrics"
      },
      {
        "type": "metrics",
        "dataset": "redis.key",
        "title": "Redis key metrics"
      },
      {
        "type": "metrics",
        "dataset": "redis.keyspace",
        "title": "Redis keyspace metrics"
      },
      {
        "type": "logs",
        "dataset": "redis.log",
        "title": "Redis application logs"
      },
      {
        "type": "logs",
        "dataset": "redis.slowlog",
        "title": "Redis slow logs"
      }
    ]
  },
  {
    "name": "zookeeper",
    "title": "ZooKeeper Metrics",
    "version": "1.2.0",
    "release": "ga",
    "description": "Collect metrics from ZooKeeper service with Elastic Agent.",
    "type": "integration",
    "download": "/epr/zookeeper/zookeeper-1.2.0.zip",
    "path": "/package/zookeeper/1.2.0",
    "icons": [
      {
        "src": "/img/zookeeper.svg",
        "path": "/package/zookeeper/1.2.0/img/zookeeper.svg",
        "title": "zookeeper",
        "size": "754x754",
        "type": "image/svg+xml"
      }
    ],
    "policy_templates": [
      {
        "name": "zookeeper",
        "title": "ZooKeeper metrics",
        "description": "Collect metrics from ZooKeeper instances"
      }
    ],
    "conditions": {
      "kibana": {
        "version": "^7.14.0 || ^8.0.0"
      }
    },
    "owner": {
      "github": "elastic/integrations"
    },
    "categories": [
      "datastore",
      "config_management"
    ],
    "signature_path": "/epr/zookeeper/zookeeper-1.2.0.zip.sig",
    "data_streams": [
      {
        "type": "metrics",
        "dataset": "zookeeper.connection",
        "title": "ZooKeeper connection metrics"
      },
      {
        "type": "metrics",
        "dataset": "zookeeper.mntr",
        "title": "ZooKeeper mntr metrics"
      },
      {
        "type": "metrics",
        "dataset": "zookeeper.server",
        "title": "ZooKeeper server metrics"
      }
    ]
  }
]
