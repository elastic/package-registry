# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json

env:
  SETUP_MAGE_VERSION: '1.14.0'
  DOCKER_REGISTRY: 'docker.elastic.co'
  # TODO change namespace to `package-registry` for DOCKER_IMG
  DOCKER_IMG: "${DOCKER_REGISTRY}/observability-ci/temp-package-registry" # TODO needs to rename after tests: remove prefix temp
  DOCKER_IMG_PR: "${DOCKER_REGISTRY}/observability-ci/temp-package-registry" # TODO needs to rename after tests: remove prefix temp

steps:
  - label: ":golangci-lint: Checks formatting / linting"
    key: lint
    command:
      - ".buildkite/scripts/lint.sh"
    agents:
      image: "golang:${SETUP_GOLANG_VERSION}"
      cpu: "8"
      memory: "4G"

  - label: ":hammer: Build"
    key: build
    command:
      - ".buildkite/scripts/build.sh"
    agents:
      image: "golang:${SETUP_GOLANG_VERSION}"
      cpu: "8"
      memory: "4G"

  - label: ":linux: Test on Linux"
    key: test-linux
    command:
      - ".buildkite/scripts/run-tests.sh"
    agents:
      image: "golang:${SETUP_GOLANG_VERSION}"
      cpu: "8"
      memory: "4G"
    artifact_paths:
      - "tests-report-linux.xml"

  - label: ":windows: Test on Windows"
    key: test-win
    command:
      - ".buildkite/scripts/run-tests.ps1"
    agents:
      provider: "gcp"
      image: "family/ci-windows-2022"
    artifact_paths:
      - "tests-report-win.xml"

  - label: ":junit: Junit annotate"
    plugins:
      - junit-annotate#v2.4.1:
          artifacts: "tests-report-*.xml"
          fail-build-on-error: true
    agents:
      provider: "gcp" #junit plugin requires docker
    depends_on:
      - step: "test-linux"
        allow_failure: true
      - step: "test-win"
        allow_failure: true

  - label: "Publish docker image"
    key: "publish"
    command: ".buildkite/scripts/publish.sh"
    agents:
      provider: "gcp"
    depends_on:
      - step: "test-linux"
        allow_failure: false
      - step: "test-win"
        allow_failure: false
      - step: "build"
        allow_failure: false
      - step: "lint"
        allow_failure: false

  - label: "Triggering update-package-registry-job-remote with version"
    key: "triggering-jenkins"
    if: build.tag =~ /^v\d+\.\d+\.\d+$$/
    command: ".buildkite/scripts/trigger-jenkins-job.sh"
    env:
      DRAFT_PR: true
      DRY_RUN: true
      VERSION: "${BUILDKITE_TAG}"
    agents:
      image: "golang:${SETUP_GOLANG_VERSION}"
      cpu: "8"
      memory: "4G"
    depends_on:
      - step: "publish"
        allow_failure: false
