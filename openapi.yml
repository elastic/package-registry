openapi: 3.0.0
info:
  title: EPR
  version: '1.0'
  license:
    name: Elastic-License
    url: 'https://github.com/elastic/package-registry/blob/master/LICENSE.txt'
  description: Elastic Package Registry
servers:
  - url: 'https://epr.elastic.co'
    description: public
  - url: 'https://epr-staging.elastic.co'
    description: staging
  - url: 'http://localhost:8080'
    description: local
paths:
  /:
    get:
      summary: GET info
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexData'
      operationId: get
      description: Info about the registry
  /categories:
    get:
      summary: GET categories
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
              examples:
                example-1:
                  value:
                    - id: logs
                      title: Logs
                      count: 20
                    - id: metrics
                      title: Metrics
                      count: 17
      operationId: get-categories
      description: List of the existing package categories and how many packages are in each category
      parameters:
        - $ref: '#/components/parameters/experimentalPackageParam'
  /search:
    get:
      summary: Search packages
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BasePackage'
      operationId: get-search
      description: Search for packages. By default returns all the most recent packages available.
      parameters:
        - schema:
            type: string
          in: query
          name: kibana.version
          description: 'Filters out all the packages which are not compatible with the given Kibana version. If it is set to 7.3.1 and a package requires 7.4, the package will not be returned or an older compatible package will be shown. By default this endpoint always returns only the newest compatible package.'
        - schema:
            type: string
          in: query
          name: category
          description: Filters the package by the given category. Available categories can be seend when going to /categories endpoint.
        - schema:
            type: string
          in: query
          name: package
          description: 'Filters by a specific package name, for example mysql. In contrast to the other endpoints, it will return by default all versions of this package.'
        - $ref: '#/components/parameters/internalPackageParam'
        - $ref: '#/components/parameters/experimentalPackageParam'
  '/package/{package}/{version}':
    get:
      summary: GET package info
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
      operationId: get-package
      description: Info about a package
    parameters:
      - schema:
          type: string
        name: package
        in: path
        description: Name of the package
        required: true
      - schema:
          type: string
        name: version
        in: path
        required: true
        description: Version of the package
components:
  schemas:
    IndexData:
      title: IndexData
      type: object
      properties:
        version:
          type: string
        service.name:
          type: string
      required:
        - version
        - service.name
    Category:
      title: Category
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        count:
          type: integer
      required:
        - id
        - title
        - count
    Image:
      title: Image
      type: object
      properties:
        path:
          type: string
        src:
          type: string
        title:
          type: string
        size:
          type: string
        type:
          type: string
      required:
        - src
    ProductRequirement:
      title: Kibana
      type: object
      properties:
        versions:
          type: string
    Requirement:
      title: Requirement
      type: object
      properties:
        Kibana:
          $ref: '#/components/schemas/ProductRequirement'
      required:
        - Kibana
    DataStream:
      title: DataStream
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        title:
          type: string
        release:
          type: string
        ingest_pipeline:
          type: string
        streams:
          $ref: '#/components/schemas/Stream'
        package:
          type: string
        path:
          type: string
      required:
        - title
        - release
        - type
    Stream:
      title: Stream
      type: object
      properties:
        input:
          type: string
        vars:
          $ref: '#/components/schemas/Variable'
        dataset:
          type: string
        template_path:
          type: string
        title:
          type: string
        description:
          type: string
        enabled:
          type: boolean
      required:
        - input
    Input:
      title: Input
      type: object
      properties:
        type:
          type: string
        vars:
          $ref: '#/components/schemas/Variable'
        title:
          type: string
        description:
          type: string
        streams:
          $ref: '#/components/schemas/Stream'
      required:
        - type
    Variable:
      title: Variable
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        title:
          type: string
        description:
          type: string
        multi:
          type: boolean
        required:
          type: boolean
        show_user:
          type: boolean
        default:
          type: object
      required:
        - name
        - type
        - multi
        - required
        - show_user
    BasePackage:
      title: BasePackage
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        version:
          type: string
        release:
          type: string
        description:
          type: string
        type:
          type: string
        download:
          type: string
        downloads:
          type: array
          items:
            $ref: '#/components/schemas/Download'
        path:
          type: string
        icons:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        internal:
          type: string
      required:
        - name
        - version
        - description
        - type
    Download:
      title: Download
      type: object
      properties:
        path:
          type: string
        type:
          type: string
      required:
        - path
        - type
    Package:
      title: Package
      allOf:
        - $ref: '#/components/schemas/BasePackage'
        - type: object
          properties:
            format_version:
              type: string
            readme:
              type: string
            license:
              type: string
            categories:
              type: array
              items:
                type: string
            requirement:
              $ref: '#/components/schemas/Requirement'
            screenshots:
              $ref: '#/components/schemas/Image'
            assets:
              type: array
              items:
                type: string
            policy_templates:
              type: array
              items:
                $ref: '#/components/schemas/PolicyTemplate'
            data_streams:
              type: array
              items:
                $ref: '#/components/schemas/DataStream'
            owner:
              $ref: '#/components/schemas/Owner'
          required:
            - format_version
            - categories
            - requirement
      description: ''
    PolicyTemplate:
      title: PolicyTemplate
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        description:
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Input'
        multiple:
          type: boolean
      required:
        - name
        - title
        - description
        - inputs
    Owner:
      title: Owner
      type: object
      properties:
        github:
          type: string
  parameters:
    internalPackageParam:
      name: internal
      in: query
      required: false
      description: Set to true to also list internal packages
      schema:
        type: boolean
        default: false
    experimentalPackageParam:
      name: experimental
      in: query
      required: false
      description: Set to true to also list experimental packages
      schema:
        type: boolean
        default: false
